// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String     @id @default(uuid())
  username  String     @unique
  firstName String?
  lastName  String?
  image     String?
  email     String     @unique
  createdAt DateTime   @default(now())
  accounts  Account[]
  userRoles UserRole[]
}

model Account {
  id                String @id @default(uuid())
  provider          String
  providerAccountId String @unique
  userId            String @unique
  user              User   @relation(fields: [userId], references: [id])

  @@unique([provider, userId])
}

model Role {
  id          String           @id @default(uuid())
  name        String           @unique
  description String?
  permissions RolePermission[]
  services    ServiceRole[]
  UserRole    UserRole[]
}

model Permission {
  id              String           @id @default(uuid())
  name            String           @unique
  description     String?
  rolePermissions RolePermission[]
}

model RolePermission {
  id           String     @id @default(uuid())
  roleId       String
  permissionId String
  role         Role       @relation(fields: [roleId], references: [id])
  permission   Permission @relation(fields: [permissionId], references: [id])

  @@unique([roleId, permissionId])
}

model UserRole {
  id     String @id @default(uuid())
  userId String
  roleId String
  user   User   @relation(fields: [userId], references: [id])
  role   Role   @relation(fields: [roleId], references: [id])

  @@unique([userId, roleId])
}

model Service {
  id           String        @id @default(uuid())
  name         String        @unique
  description  String?
  serviceRoles ServiceRole[]
}

model ServiceRole {
  id        String  @id @default(uuid())
  serviceId String
  roleId    String
  service   Service @relation(fields: [serviceId], references: [id])
  role      Role    @relation(fields: [roleId], references: [id])

  @@unique([serviceId, roleId])
}
